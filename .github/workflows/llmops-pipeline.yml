name: End-to-End LLMOps Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-scan-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: fastapi-app
      DOCKER_USER: yujieooi2000
      DOCKER_TAG: latest
      DEPLOYMENT_FILE: k8s/deployment.yaml
      SERVICE_FILE: k8s/service.yaml
      INGRESS_FILE: k8s/ingress.yaml

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3️⃣ Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4️⃣ Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t $DOCKER_USER/$IMAGE_NAME:$DOCKER_TAG -f src/Dockerfile src/

      # 5️⃣ Run Trivy scan
      - name: Security scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }}
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          format: table
          exit-code: 0

      # 6️⃣ Push image to Docker Hub
      - name: Push Docker image
        run: |
          docker push $DOCKER_USER/$IMAGE_NAME:$DOCKER_TAG

      # 7️⃣ Setup kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      # 8️⃣ Configure Kubeconfig
      - name: Set up Kubeconfig (DigitalOcean)
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

      # 9️⃣ Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f $DEPLOYMENT_FILE
          kubectl apply -f $SERVICE_FILE
          kubectl apply -f $INGRESS_FILE
